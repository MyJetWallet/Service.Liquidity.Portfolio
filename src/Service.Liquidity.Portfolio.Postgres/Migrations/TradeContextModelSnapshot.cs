// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Service.Liquidity.Portfolio.Postgres;

namespace Service.Liquidity.Portfolio.Postgres.Migrations
{
    [DbContext(typeof(TradeContext))]
    partial class TradeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("liquidityportfolio")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Service.Liquidity.Portfolio.Domain.Models.Trade", b =>
                {
                    b.Property<string>("TradeUId")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<double>("BaseVolume")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("InstrumentSymbol")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("OrderId")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<double>("OrderVolume")
                        .HasColumnType("double precision");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<double>("QuoteVolume")
                        .HasColumnType("double precision");

                    b.Property<long>("SequenceId")
                        .HasColumnType("bigint");

                    b.Property<int>("Side")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasMaxLength(64)
                        .HasColumnType("integer");

                    b.Property<string>("WalletId")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("TradeUId");

                    b.ToTable("trade");
                });
#pragma warning restore 612, 618
        }
    }
}
